web-9day
-----------------------attr file-------------------------------------------------
attr (html 속성)
$(선택자).attr( '속성이름' )
-선택자의 html 속성값을 가져온다.

$(선택자).attr( '속성이름' , '속성값' )
-선택자의 html속성값을 바꿔줌

css에서는 
$(선택자). css( '속성이름', '속성값' )
-속성이 1개인 경우
$(선택자). css( {'속성이름' : '속성값'} )
-속성이 1개 이상인 경우(이경우를 외우라했었음)

console.log( $( 'img' ).attr( 'src' ) );
->img의 src 속성을 가져온다(여기까지쓰면)
$( 'img' ).attr( 'src', 'http://placehold.it/300x300/480090/ffffff?text=attr' )
->img속성을 attr괄호 안의 속성값처럼 바꿔준다. 
 placehold.it 속성 순서->사이즈, 배경색상, 글자색상, ?문자값 
(색상은 핵스코드로 작성한다.) 

-----------------------attr_gallary-------------------------------------------------
script


 기본 형식 -> $( function ( ){


1. 작은 섬네일 이미지에 마우스 커서를 올려 놓으면 함수를 실행한다.

$( '#product ul li img' ).moseover(function( ) {
console.log( $(this).attr( 'src' ) )
마우스커서를 올려놓은것 ->작은 섬네일이미지this의 속성(이미지의주소)


 -> 동작이 실행되는지 찍어서 확인해볼것.
콘솔탭에서 이것 (작은 섬네일 이미지)의 src를 가져온다.
콘솔탭에서 마우스커서를 올려놓았을떄 콘솔이 찍혀 나왔는지 확인할것
->오류가 없는데 작동이 안되는것은 선택자를 잘못 넣은것 

선택자 #product ul li 인지, #product ul li img까지인지 생각해볼것은
다른 이미지를 불러오려면 img의 src 속성을 바꿔줘야함.
마우스 커서를 올려놓은 img에서 가져올 수 있으므로
결과적으로 하려는 동작은 img의 주소를 뽑아와야하므로
선택자는 img까지 작성해야한다. (필요한게 , 바꿀 것이 이미지의 주소이므로)

2. 마우스커서를  올렸을떄 해야할일은?
큰 섬네일 이미지에 -- 마우스 커서를 올려놓은 작은 섬네일
이미지로 바꿔준다. 
$( '#product > img').attr( 'src', $(this).attr( 'src' ) )
-> $(this).attr( 'src' )  주소를 큰섬네일 이미지의 주소로 바꿔준다.
   });
)};

Replay->
1.작은 섬네일 이미지에 마우스 커서를 올려놓으면 해야할일 (함수실행)
-> 선택자로 작은 섬네일 이미지까지를 선택해주고 순서대로 
2.마우스커서를 올려놓으면, 해야할일 까지 작성해준다. 

콘솔로 가져올 값은 마우스오버된 이미지의 속성을 가져온다(attr).
바뀌어야할 값은 마우스오버된 이미지의 주소인 src값이기 떄문에-

3.마우스커서를 작은 섬네일에 올려놓으면 이미지는 큰섬네일의 이미지로 바뀌어야한다.
=큰섬네일의 이미지가 마우스커서된 작은 섬네일의 이미지로 바뀌어야한다. 
선택자는-> 큰섬네일, 큰섬네일의 이미지가 변할것이기 때문에 선택자로 먼저 택한다.
마우스오버된 img를 가져온것은 작은 섬네일의 속성값src->$(this).attr('src')
여기서 this는 마우스오버된 작은 섬네일의 img를 의미하므로
큰섬네일의 이미지를 바꿔줄 것이고 바뀔 속성은 src이고, 
가져온 값은 작은 섬네일의 속성값이므로 차례대로 적어준다. 

$(function(){

 $( '#product ul li img' ).mouseover( function(){
 console.log( $(this).attr('src') )

$('#product>img').attr( 'src' , $(this).attr('src') )

 )};
)};

-------------------attr_header.html-----------------------------
console로 찍어보았을 때 오류가 없는데 동작이 안되는 것은
-> 선택자에 오류 확인

    
            //브라우저 창의 스크롤이 움직이면 함수 실행
            //세로스크롤바 위치가 200px 이상이면-> nav의 navi클래스를 제거하고
            //nav, nav div에 on클래스 추가
            //로고 이미지를 가로형 로고 이미지로 교체 

            //그렇지 않으면 200px 보다 작으면 
            //nav의 navi클래스 추가
            //nav, nav div 에 on클래스 추가
            //로고 이미지를 세로형 로고 이미지로 교체 







참고 -----------------------------------------------------------------
fixed_menu file
$(function(){
      // 브라우저 창의 세로 스크롤바가 움직이면 함수 실행
        $(window).scroll( function(){
            
            console.log( $(this).scrollTop() );
            //방향값은 top, left만 있음.세로스크롤바 움직일때
           if( $(this).scrollTop() >=$('header').height() ){
               //header 높이값이 400, 고정하고자 하는 위치값은 400
               //세로 스크롤바가 400이상 ->아래, 400이하-> 위
               //400이상일때만 고정해주고 그렇지 않으면 움직이게 끔. 
               $( 'nav' ).addClass('nav_fix');
               
           }else { $( 'nav' ).removeClass('nav_fix');
                  //그렇지 않으면 고정이 안되게 만들어야하므로, 클래스를 제거한다.
            }
            
        });
    });

$(window).scroll(function() {    // this will work when your window scrolled.
		var height = $(window).scrollTop();  //getting the scrolling height of window
		if(height  > 100) {
			$(".header").css({"position": "fixed"});
		} else{
			$(".header").css({"position": "relative"});
		}
	});







