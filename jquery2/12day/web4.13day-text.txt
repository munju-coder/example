web4-13day차
12day 파일

parallax.html

    <script>
        $( function (){
          
            var posTop=0;
            
            $(window).scroll( function(){
              -> 브라우저 창에서 스크롤바가 움직일때 동작(가로든 세로든)

                $( 'h1' ).text( $(this).scrollTop() );
                ->세로스크롤바의 위치값은 h1에 찍어줌
                ->전체높이 3000,화면 제외한 나머지 크기 대략 2000~2200사이
                -> 보고있는 브라우저 창마다 맨아래 나오는 값은 다름.

                $( '#box1' ).css({ 'top' : posTop+$(this).scrollTop() / 8 });

                 -> 8(임의값), $(this)->window.scroll을 의미, 
                 ->세로스크롤바의 값이 빠르게 변함. 애니메이트-> 큐가 쌓임
                 ->큐를 사용하지 않고 값을 빠르게 바꿔주면 빠르게 바뀌는 값에 의해
                 애니메이션처럼 보일것임. 
                 ->세로스크롤바의 위치 -스크롤바 이전, 다음에 따라 역재생,재생 같이 생성
                  -움직이는 속도에 의해서도 조절 가능 
                  -easeOutbounce, Elastic 같이 탄성있는 움직임.=흔들리는것처럼 보임.
                
                $( '#box2' ).css({ 'top' : posTop+$(this).scrollTop() / 7 });
                $( '#box3' ).css({ 'top' : posTop+$(this).scrollTop() / 6 });
                $( '#box4' ).css({ 'top' : posTop+$(this).scrollTop() / 5 });
                $( '#box5' ).css({ 'top' : posTop+$(this).scrollTop() / 4 });
            });
        });
    
    -------->나눠놓은 값이 다르므로 속도가 다다름, 1~5움직이는 값을 8-4까지 나눴음
   -> 4등분, 8등분 중 8등분이 작게 나눠짐. 등분을 나눠서 사용할때
       작은걸로 나눠놓은게 값이 큼. 8등분으로 나눠놓은 박스가 적게 이동하고
       4등분으로 나눠놓은것은 제일 많이 움직이게 된다.
   ->큰것-빠르게, 작은것-느리게 -> 깊이감 표현
   ->크기에 의한 원근감 생성 transform: scale(1.1)~
    </script>

parallax2.html(parallax응용)-left값 추가

        #box2 { left: 100px; }
        #box3 { left: 200px; }
        #box4 { left: 300px; }
        #box5 { left: 400px; }
    ->1번은 그대로 top만 내려갈것이므로 나머지만 위치값css 추가


      <script>
        $(function() {
            
            var posTop=0;
            var posLeft2=100;
            var posLeft3=200;
            var posLeft4=300;
            var posLeft5=400;
            
            
            $(window).scroll( function(){
              
                $( 'h1' ).text($(this).scrollTop() );
                
                $( '#box1' ).css({ 'top' : posTop +$(this).scrollTop() / 4 });
                
                $( '#box2' ).css({ 'top' : posTop+$(this).scrollTop() / 5,
                                 'left': posLeft2+$(this).scrollTop() /10 });

                ->대각선방향->top, left같이 주고 있는 것
                ->자기위치(posTop, posLeft2~5)에서 스크롤바위치값을 나눠주면됨 
                   움직이는건 세로스크롤바/세로로는 적게나누고(top) 가로로는 많이 나눠서(left)
                ->left로 많이 움직이려면 나누는 값이 작아져야함. 


                $( '#box3' ).css({ 'top' : posTop+$(this).scrollTop() / 6,
                                 'left': posLeft3+$(this).scrollTop() /6 });
                
                $( '#box4' ).css({ 'top' : posTop+$(this).scrollTop() / 10,
                                 'left': posLeft4+$(this).scrollTop() /5 });
                
                $( '#box5' ).css({ 
                                 'left': posLeft5+$(this).scrollTop() /4 });
                  ->left값만 들어가므로, 

            });

        });
            -->세로스크롤바에 의해 모이고 펼쳐지는 동작.

    </script>



parallax_bg.htm--------------------------------------------------------------
배경에 parallax 효과

<script>
    
    
        $( function(){
          
            $( '#wrap2 section' ).each( function(){
              
                var bgObj=$(this);
                -->this->#wrap2 section(이벤트를 받는애)

                $(window).scroll( function(){
                  
                    var pos=$(this).scrollTop() / 2;
                -->this->$(window).scroll
                    bgObj.css({ 'background-position' : bgObj.offset().left +'px '+ -pos + 'px' });
               
                -->반복중인 section에 화면을 기준으로 왼쪽으로 떨어진위치(x축 좌표 bgObj.offset().left )
                  left값은 왼쪽오른쪽이 보이는 화면이 똑같이 시작됨.
           
                -->'px ' 값구분위한 공백, 마지막은 공백 필요없는 'px'
                -->배경이미지의 위치가 왼쪽은 그냥fixed / 오른쪽 패럴랙스효과 
                                                                      스크롤바위치에 따라 같이올라가고내려감-깊이감.
 
                });
            });
            
            
        });
        
    </script>

parallax_transform.html-----------------------------------------------------------------------------------------------------



 <script>
    
    
        $(function(){
          
            $(window).scroll( function(){
              
                ★스크롤바 공식★

                스크롤바 가동범위 a ~ b          0 ~1000
                움직일것 가동범위 c ~ d (화면)  0~ -1200
                     (스크롤바를 움직였을때 다른게 움직여질것)
                
                var 결과값변수명 = ( d - c ) / ( b - a ) * ( 스크롤바 위치 - a ) + c

                //var sc =( d-c ) / ( b-a ) * ( scroll - a ) + c;   --스크롤바공식  -스크롤바에 관련된 모든 동작에 적용가능

                var item1=$(this).scrollTop() * 0.001 +1;
                
                    -->scale 1은 1배, 1만 해도 2000, 소수점 단위로 작업. 
                    -->1000x0.1=100 
                    --> 스크롤바위치 아래-커짐 위-작아짐. 가장위로-스크롤바위치:0, 시작할떄는 자기사이즈:1부터시작
                         따라서 +1 을 넣어줘야 자기사이즈부터 시작할 수 있음

                $( '#box1' ).css({ 'transform' : 'scale(' +item1+ ')' });
                
                if( item1 >1.3){
                    $( '#box1' ).css({ 'transform' : 'scale(1.3)' });
                }
                -->1.3보다 커질때 박스1번을 조건식으로 걸어두면 1.3으로 고정. 1.3보다 커지면 1.3으로 만들어라.
                -->최소한 1.3보다 커지지 않는다.
 
                var item2=$(this).scrollTop() * 0.01;
                $( '#box2' ).css({ 'transform' : 'skewY(' +item2+ 'deg)' });
                
                -->10도 단위이상으로 넘어가지 않게, 그러면 자리수가 2자리수가 나와야하니까 곱하기0.01
                -->회전각이니까 deg단위붙여줌.

                var item3=$(this).scrollTop() * 0.1;
                $( '#box3' ).css({ 'transform' : 'rotate(' +item3+ 'deg)' });
                -->100도 단위로 나올 수 있게. 360도 까지 있으니까.0.1곱해줌.
                -->회전은 360도 까지 나올 수 있음, 0보다 작아져도 상관X

                var item4=$(this).scrollTop()* 0.001;
                $( '#box4' ).css({ 'opacity': item4 });

                -->opacity 0~1까지 나올 수 있음/ 1자리까지나와야하니까 0.001곱함.
                --> if문 필요 없음. 0-1까지를 쓸 수 있음 0보다 작아진다고 해서 더투명해지지 X 1일때가 최대선명
                작아져도 커져도 문제가 되지 않으므로. 값이 넘어가도 차이가 없으니까. 
               
            });
        });
        
    
    </script>













